<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <http auto-config="true" use-expressions="true">
        <http-basic/>
        <intercept-url pattern="/user/*" method="GET" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/user/*" method="DELETE" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/user/*" method="POST" access="denyAll"/>
        <intercept-url pattern="/user/**/file" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/user/**/file/**/content/*" access="hasRole('ROLE_USER')"/>
        <csrf disabled="true"/>
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userService"/>
    </authentication-manager>

    <jdbc-user-service id="userService" data-source-ref="dataSource"
                       users-by-username-query="SELECT email, password, TRUE FROM user WHERE email = ?"
                       authorities-by-username-query="SELECT email, 'ROLE_USER' FROM user WHERE email = ?"/>
</beans:beans>